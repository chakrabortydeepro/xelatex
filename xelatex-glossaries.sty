% \section{xelatex-glossaries.sty}
%
%Official documentation of LaTeX glossaries is found in the TeXlive
%distribution:
% \begin{itemize}
% \item  glossaries.pdf
% \item  glossaries-extra.pdf
% \item bib2gls.pdf
% \item glossariesbegin.pdf
% \end{itemize}
%
%See 
%\begin{itemize}
%    \item  \url{https://ctan.org/pkg/glossaries}
%    \item \url{https://ctan.org/pkg/glossaries-extra}
%    \item \url{https://ctan.org/pkg/bib2gls}
%\end{itemize}
%
% The Glossaries packages are complex and the documentation is  
% voluminous and written from the point of view of an insider programmer.
% See also \url{https://en.wikibooks.org/wiki/LaTeX/Glossary}
%
% I cannot pretend to understand the package overall, but the code below
% works.
% 
% A shorter and earlier description of this package -- with pictures! -- is 
%available at 
% \url{https://cikitsa.blogspot.com/2022/11/making-index-of-plant-names.html}
%
%\subsection{Glossaries of plants and animals}
%
%This package initializes two glossaries, plants and animals.  These 
%glossaries draw their content from the databases \verb"plants.bib" and 
%\verb"animals.bib", 
% using the \verb"bib2gls" feature of 
%Glossaries.  These two databases are in simple bibtex format. One entry, 
%for example, reads,
%\begin{verbatim}
%@Entry{māṃsī,
%citationkey = {māṃsī},
%description = {Nardostachys grandiflora, DC. See 
%               \volcite{1}[\#1691]{NK}},
%name        = {spikenard},
%}
%\end{verbatim} 
% Note the use of Bib\LaTeX\ citations in the \verb"description" field.  You will 
%have loaded the \verb"biblatex" package earlier for this to work.
%
%Also, 
%note that the separate field “\verb"citationkey = {māṃsī},"” is not 
% necessary (as far as I know).  The citation key is the word after
%  \verb"@Entry{" and before the comma.  I use 
% \href{http://jabref.org}{JabRef} to manage my databases and it adds the 
% \verb"citationkey =" by itself.  It does no harm.
%
%The citation keys in the databases, e.g., \verb"māṃsī", is used as the 
% argument of the macro
%\verb"\gls{}" in your document. It may contain diacritical marks.  For 
%example, you 
%write “The plant is \verb"\gls{māṃsī}"” and your out put PDF will print “The 
%plant is 
%spikenard”.  The macro \verb"\gls" has looked up “māṃsī” in plants.bib and 
%replaced 
%it with the name “spikenard”.  At the same time, the entry “spikenard” is 
%written to the glossary at the end of your document, giving the name 
%“māṃsī” 
%and then the contents of the description field from \verb"plants.bib". 
%
% \subsection{Singular, plural, capitalized}
%The command \verb"\glspl{}" produces the plural (“spikenards”).  The 
%command 
%\verb"\Gls{}" capitalizes the ouput (“Spikenard”).  \verb"\Glspl{}" \ldots\  
%(“Spikenards”).  If the 
%plural isn't composed with suffix s, you can add a field 
% “\verb"plural ="“ to the 
%\verb"plants.bib" database giving the plural form.  (So, with 
% \verb"plural=mongeese," \verb"\Glspl{nakula}" prints “Mongeese”.)  
%
%The glossaries at the end of your document are produced by the commands
%\begin{itemize}
%    \item \verb"\printunsrtglossary[type=plants]"
%    \item \verb"\printunsrtglossary[type=animals]"
%\end{itemize}
%
%  \begin{macro}{glossaries-extra.sty}
%    \begin{macrocode}
\usepackage[record={only}, % see bib2gls manual, option summary
nostyles, 								% don't load things you don't need
style=bookindex, 				  % load this style
stylemods=bookindex, 		  % load the updates for this style
postpunc={\,:\ },					% after description, before page numbers
automake,							  % run bib2gls automatically; bib2gls manual
section]{glossaries-extra}
%    \end{macrocode}
%  \end{macro}
%
% \subsection{Define two glossaries}
%  \begin{macro}{\newglossary}
% Give names to the database types and to the default headings 
% that will print when the glossaries are printed.  Filename extensions
% etc.\ are handled silently.
%    \begin{macrocode}
\newglossary*{plants}{Flora}  
\newglossary*{animals}{Fauna}
%    \end{macrocode}
%  \end{macro} 
%
% \subsection{Format of the glossary entries}
%
% This controls the format of the text printed in the glossaries.\\
% See % glossaries-extra.pdf manual, section 8.7.1, p.443
%
%  \begin{macro}{\glsxtrbookindexname}
%  \begin{macrocode}
\renewcommand*{\glsxtrbookindexname}[1]{%
    \glossentryname{#1}%
    \space (\emph{\the\glslabeltok{#1}})%
    \ifglshasdesc{#1}{\space \glossentrydesc{#1}\glspostdescription}{}%
}
%    \end{macrocode}
% Get rid of that pesky pre-comma.
% (glossaries-extra.pdf manual, section 8.7.1, p.446):
%  \begin{macrocode}
\renewcommand*\glsxtrbookindexprelocation[1]{\empty }
%    \end{macrocode}
%  \end{macro}
%
%\subsection{Glossary preamble}
%  \begin{macro}{\setglossarypreamble}
% Tell the reader that a colon (\verb"postpunc" above) is what 
% separates the glossary text from the page numbers.  It can be 
% a bit visually confusing.\\
% (glossaries-extra.pdf manual, section 8.7.1, p.443):
%  \begin{macrocode}
%\renewcommand{\glossaryname}{Materia Medica} % can do that later
\setglossarypreamble{\emph{\footnotesize 
        Numbers after the final colon refer to 
        pages in this book.}\bigskip}  
%    \end{macrocode}
%  \end{macro}
%
% \subsection{Load up the databases}
%
% Instructions to \verb"bib2gls", telling it the location 
% of the databases and what type of data is in each.
%
% The \verb"type=" parameter tells bib2gls what kind of data is in this
% database.  So you can use the same \verb"\gls{}" command whether you 
% are referring to a plant or an animal.  \verb"bib2gls" will look through
% both databases and send the plant identies to the plants glossary and 
% the animals to the animals glossary.
%
%  I don't understand why the \verb"field-aliases" parameter is necessary, 
% but it seems to be.
% \subsection{Plants}
%  \begin{macro}{\GlsXtrLoadResources}
%    \begin{macrocode}
\GlsXtrLoadResources[
src={~/Dropbox/localtexmf/bibtex/bib/plants},
type=plants,
%selection=all,  % select this if you want all the contents of the database
field-aliases={identifier=citationkey},
sort={en-GB},
]
%    \end{macrocode}
% \subsection{Animals}
%    \begin{macrocode}
\GlsXtrLoadResources[
src={~/Dropbox/localtexmf/bibtex/bib/animals},
type=animals,
%selection=all,  % select this if you want all the contents of the database
field-aliases={identifier=citationkey},
sort={en-GB},
]
%    \end{macrocode}
%  \end{macro}
%
%\subsection{Print the glossaries}
%As mentioned above, produce the actual glossaries with
%\begin{macro}{\printunsrtglossary}
%\begin{itemize}
%    \item \verb"\printunsrtglossary[type=plants]"
%    \item \verb"\printunsrtglossary[type=animals]"
%\end{itemize}
% at the end of your document.
%\end{macro}

% \bigskip
%
%That's all folks!

\endinput

% terms are defined in 
%plants.bib and animals.bib
%sort={en-GB}, % sort according to this locale
%
% Usage:
% To index an item say \gls{klītaka}.  Use the sanskrit name as the label 
% both here and in the plants.bib file. Plurals \glspl{}, capital \Gls{}.
%
% To print the glossary, say
% \printunsrtglossaries % plant names.  iterate over all defined entries 

% tests with tooltip - failed :-(
%\let\oldgls\gls
%\renewcommand{\gls}[1]{\pdftooltip{\oldgls{#1}}{#1}}